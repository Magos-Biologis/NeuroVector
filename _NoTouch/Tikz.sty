
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{Tikz}[Anakin's personalized Tikz package]

% ========================= Tikz Packages ================================

\RequirePackage{float} % Allows for showing numbers of significant decimal points also figure
\RequirePackage{tikz} % Drawing
    %\usetikzlibrary{shapes, shapes.geometric, shapes.misc, shapes.arrows}
    %\usetikzlibrary{3d, perspective}
    %\usetikzlibrary{arrows, arrows.meta}
    %\usetikzlibrary{angles, math, calc, matrix}
    %\usetikzlibrary{positioning}
    %\usetikzlibrary{fadings, shadows, shadings}
    %\usetikzlibrary{decorations.pathreplacing, decorations.markings, decorations.text} 
    %\usetikzlibrary{calligraphy}
    %\usetikzlibrary{circuits.ee.IEC}
    %\usetikzlibrary{quotes} %Tikz Library
    \tikzset{>=latex} % for LaTeX arrow head
    
\RequirePackage{pgfplots} % For plotting within LaTeX
\RequirePackage{pgfplotstable} % table plotting
    \pgfplotsset{compat=1.18}
    %\pgfplotsset{width=10cm, compat=1.9}
\RequirePackage{chemfig} % Draws chemicals
    \setchemfig{
                atom sep=2em, 
                bond style={line width= 1pt},
                } % Chem config

% =========================== Tikz Colors ================================

\colorlet{mypurple}{blue!80!red}
\colorlet{myblue}{blue!80!black}
\colorlet{myblueshadow}{blue!30!black!90}
\colorlet{myred}{red!80!black}
\colorlet{mydarkred}{red!50!black}
\colorlet{mygreen}{green!60!black!70}
\colorlet{mydarkgreen}{green!60!black}

% ========================= Tikz Commands ================================

% ========================= Macros

% This bascially automates a \newcommand{<name>}{} to ensure
% that a command with the given <name> does not already exist
\providecommand*{\pgfmathsetnewmacro}[2]{%
    \newcommand*{#1}{}% Error if already defined
    \pgfmathsetmacro{#1}{#2}%
}%

% ========================= Shapes

\newcommand{\simpleCuboid}[3]{% x y z
    \fill[gray!80!white]
    (tpp cs:x=0,y=0,z=#3)--
    (tpp cs:x=0,y=#2,z=#3)--
    (tpp cs:x=#1,y=#2,z=#3)--
    (tpp cs:x=#1,y=0,z=#3)--
    cycle;
    \fill[gray]
    (tpp cs:x=0,y=0,z=0)--
    (tpp cs:x=0,y=0,z=#3)--
    (tpp cs:x=0,y=#2,z=#3)--
    (tpp cs:x=0,y=#2,z=0)--
    cycle;
    \fill[gray!50!white]
    (tpp cs:x=0,y=0,z=0)--
    (tpp cs:x=0,y=0,z=#3)--
    (tpp cs:x=#1,y=0,z=#3)--
    (tpp cs:x=#1,y=0,z=0)--
    cycle;
}

\newcommand{\drawCylinder}[3]{ % 1 = positioning, 2 = height, 3 = width
    \fill[black!25] (#1) circle (#3);
    \draw[line width=0.8] (#1) circle (#3);
    %
    \begin{scope}[canvas is xz plane at y=\l]
    \end{scope}
    \fill[black!25]
    (#1)+ (0:#3/2)--
    ++ (270:#2)--
    ++ (270:#2)--
    ++ (90:#2);
    %
    \draw[line width =0.8]
    (#1)+ (0:#3/2)--
    ++ (270:#2);
    \draw[line width =0.8]
    (#1)+ (180:#3/2)--
    ++ (270:#2);
    %
    \fill[black!25] (#1)+ (90:#2) circle (#3);
    \draw[line width=0.8] (#1)+ (90:#2) circle (#3);
}

\newcommand{\simpleAxes}[3]{%
    \draw[->] (-0.5,0,0)-- (#1,0,0) node[pos=1.1]{x};
    \draw[->] (0,-0.5,0)-- (0,#2,0) node[pos=1.1]{y};
    \draw[->] (0,0,-0.5)-- (0,0,#3) node[pos=1.1]{z};
}

% ========================= Quality of Life

\newcommand{\rightAngle}[4]{ % 1 = coord 1, 2 = origin, 3 = coord 2, 4 = distance
    \pgfmathanglebetweenpoints{\pgfpointanchor{#2}{center}}{\pgfpointanchor{#3}{center}}
    \coordinate(tmpRA) at ($(#2)+(\pgfmathresult+45:#4)$);
    \draw[white,line width=0.6] ($(#2)!(tmpRA)!(#1)$)-- (tmpRA)-- ($(#2)!(tmpRA)!(#3)$);
    \draw[red!80!black] ($(#2)!(tmpRA)!(#1)$)-- (tmpRA)-- ($(#2)!(tmpRA)!(#3)$);
}

\newcommand{\tick}[2]{\draw[thick] (#1) ++ (#2:0.1) --++ (#2-180:0.2)}

\newcommand{\sinewave}[4][]{\draw[#1]  plot (\x,{#2*sin~((#4*pi/180)~r + 2*pi*#3*\x r)})}

\providecommand{\findAngle}[2]{ % 1 = point 1, 2 = point 2
    \pgfmathanglebetweenpoints%
    {\pgfpointanchor{#1}{center}}
    {\pgfpointanchor{#2}{center}}
    \pgfmathresult}

\newcommand{\cdraw}[2]{
    \draw[line width = 1, red, draw opacity=0.25, dashed]
    (\w,   {#1*cos~(#2)},   {#1*sin~(#2)})-- (\y+0.05,0,0);
}

\newcommand\lineend[2]{
    \draw(#1)++ (#2:\w) to[out=#2-180-\c,~in=#2+\c] (#1)
    to[out=#2+\c-180,in=#2-\c]++ (#2-180:\w);
}

% =========================== Tikz Decos =================================

\pgfdeclaredecoration{Snake}{initial}%
{%
    \state{initial}[%switch if less than=+.625\pgfdecorationsegmentlength to final,
        width=0.\pgfdecorationsegmentlength,
        next state=down]{
        \pgfpathmoveto{ \pgfqpoint{0pt} {\pgfdecorationsegmentamplitude}}
    }
    \state{down}[switch if less than=+0.625\pgfdecorationsegmentlength~to end down,
        width=+0.5\pgfdecorationsegmentlength,
        next state=up]{
        \pgfpathcosine{\pgfqpoint{0.25\pgfdecorationsegmentlength}{-1\pgfdecorationsegmentamplitude}}
        \pgfpathsine{\pgfqpoint{0.25\pgfdecorationsegmentlength}{-1\pgfdecorationsegmentamplitude}}
    }
    \state{up}[switch if less than=+0.625\pgfdecorationsegmentlength~to end up,
        width=+0.5\pgfdecorationsegmentlength,
        next state=down]{
        \pgfpathcosine{\pgfqpoint{0.25\pgfdecorationsegmentlength}{\pgfdecorationsegmentamplitude}}
        \pgfpathsine{\pgfqpoint{0.25\pgfdecorationsegmentlength}{\pgfdecorationsegmentamplitude}}
    }
    \state{end down}[width=0\pgfdecorationsegmentlength,
        next state=final]{
        \pgfpathcosine{\pgfqpoint{0.25\pgfdecorationsegmentlength}{-1\pgfdecorationsegmentamplitude}}
        \pgfpathsine{\pgfqpoint{0.25\pgfdecorationsegmentlength}{-1\pgfdecorationsegmentamplitude}}
    }
    \state{end up}[width=0\pgfdecorationsegmentlength,
        next state=final]{
        \pgfpathcosine{\pgfqpoint{0.25\pgfdecorationsegmentlength}{\pgfdecorationsegmentamplitude}}
        \pgfpathsine{\pgfqpoint{0.25\pgfdecorationsegmentlength}{\pgfdecorationsegmentamplitude}}
    }
}


\tikzset{
  show curve controls/.style={
    postaction={
      decoration={
        show path construction,
        curveto code={
          \draw [blue] 
            (\tikzinputsegmentfirst) -- (\tikzinputsegmentsupporta)
            (\tikzinputsegmentlast) -- (\tikzinputsegmentsupportb);
          \fill [red, opacity=0.5] 
            (\tikzinputsegmentsupporta) circle [radius=.5ex]
            (\tikzinputsegmentsupportb) circle [radius=.5ex];
        }
      },
      decorate
}}}

\tikzset{
  Mylen Sheath/.style={decoration={markings,
                        mark=between positions 0 and 1 step 0.75cm
                        with { \node   [rectangle, 
                                        rounded corners, 
                                        fill = white, 
                                        draw = \clr,
                                        inner sep=0pt,
                                        minimum height=0.45cm,minimum width=0.7cm,
                                        %scale = 0.5,
                                        transform shape] {};}}
                                        }
                                    }
                                    
% ========================================================================
\endinput